// --- [ Conversion instructions ] ---------------------------------------------

// ~~~ [ trunc ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#trunc-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

TruncInst
	: "trunc" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.TruncInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ zext ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#zext-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

ZExtInst
	: "zext" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.ZExtInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ sext ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#sext-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

SExtInst
	: "sext" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.SExtInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ fptrunc ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#fptrunc-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

FPTruncInst
	: "fptrunc" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.FPTruncInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ fpext ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#fpext-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

FPExtInst
	: "fpext" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.FPExtInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ fptoui ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#fptoui-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

FPToUIInst
	: "fptoui" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.FPToUIInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ fptosi ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#fptosi-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

FPToSIInst
	: "fptosi" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.FPToSIInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ uitofp ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#uitofp-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

UIToFPInst
	: "uitofp" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.UIToFPInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ sitofp ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#sitofp-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

SIToFPInst
	: "sitofp" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.SIToFPInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ ptrtoint ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#ptrtoint-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

PtrToIntInst
	: "ptrtoint" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.PtrToIntInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ inttoptr ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#inttoptr-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

IntToPtrInst
	: "inttoptr" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.IntToPtrInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ bitcast ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#bitcast-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

BitCastInst
	: "bitcast" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.BitCastInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

// ~~~ [ addrspacecast ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#addrspacecast-instruction

// ref: ParseCast
//
//   ::= CastOpc TypeAndValue 'to' Type

AddrSpaceCastInst
	: "addrspacecast" Type Value "to" Type OptCommaSepMetadataAttachmentList
	<< &ast.AddrSpaceCastInst{From: astx.TypeValue($1, $2), To: $4.(ast.Type), Metadata: $5.([]*ast.MetadataAttachment)}, nil >>
;

