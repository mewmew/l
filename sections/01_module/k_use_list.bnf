// ~~~ [ Use-list Order Directives ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#use-list-order-directives

// ref: ParseUseListOrder
//
//   ::= 'uselistorder' Type Value ',' UseListOrderIndexes
//  UseListOrderIndexes
//   ::= '{' uint32 (',' uint32)+ '}'

UseListOrders
	: empty
	<< ([]*ast.UseListOrder)(nil), nil >>
	| UseListOrderList
;

UseListOrderList
	: UseListOrder
	<< []*ast.UseListOrder{$0.(*ast.UseListOrder)}, nil >>
	| UseListOrderList UseListOrder
	<< append($0.([]*ast.UseListOrder), $1.(*ast.UseListOrder)), nil >>
;

UseListOrder
	: "uselistorder" Type Value "," "{" IndexList "}"
	<< &ast.UseListOrder{Type: $1.(ast.Type), Value: $2.(ast.Value), Indices: $5.([]int64)}, nil >>
;

// ref: ParseUseListOrderBB
//
//   ::= 'uselistorder_bb' @foo ',' %bar ',' UseListOrderIndexes

UseListOrderBB
	: "uselistorder_bb" GlobalIdent "," LocalIdent "," "{" IndexList "}"
	<< &ast.UseListOrderBB{Func: $1.(*ast.GlobalIdent), Block: $3.(*ast.LocalIdent), Indices: $6.([]int64)}, nil >>
;

