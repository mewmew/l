// ~~~ [ Global Variable Declaration ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#global-variables

// ref: ParseUnnamedGlobal
//
//   OptionalVisibility (ALIAS | IFUNC) ...
//   OptionalLinkage OptionalPreemptionSpecifier OptionalVisibility
//   OptionalDLLStorageClass
//                                                     ...   -> global variable
//   GlobalID '=' OptionalVisibility (ALIAS | IFUNC) ...
//   GlobalID '=' OptionalLinkage OptionalPreemptionSpecifier OptionalVisibility
//                OptionalDLLStorageClass
//                                                     ...   -> global variable

// ref: ParseNamedGlobal
//
//   GlobalVar '=' OptionalVisibility (ALIAS | IFUNC) ...
//   GlobalVar '=' OptionalLinkage OptionalPreemptionSpecifier
//                 OptionalVisibility OptionalDLLStorageClass
//                                                     ...   -> global variable

// ref: ParseGlobal
//
//   ::= GlobalVar '=' OptionalLinkage OptionalPreemptionSpecifier
//       OptionalVisibility OptionalDLLStorageClass
//       OptionalThreadLocal OptionalUnnamedAddr OptionalAddrSpace
//       OptionalExternallyInitialized GlobalType Type Const OptionalAttrs
//   ::= OptionalLinkage OptionalPreemptionSpecifier OptionalVisibility
//       OptionalDLLStorageClass OptionalThreadLocal OptionalUnnamedAddr
//       OptionalAddrSpace OptionalExternallyInitialized GlobalType Type
//       Const OptionalAttrs

// https://llvm.org/docs/LangRef.html#aliases
// https://llvm.org/docs/LangRef.html#ifuncs

// ref: parseIndirectSymbol
//
//   ::= GlobalVar '=' OptionalLinkage OptionalPreemptionSpecifier
//                     OptionalVisibility OptionalDLLStorageClass
//                     OptionalThreadLocal OptionalUnnamedAddr
//                     'alias|ifunc' IndirectSymbol
//
//  IndirectSymbol
//   ::= TypeAndValue

GlobalDecl
	: GlobalIdent "=" ExternLinkage OptPreemptionSpecifier OptVisibility OptDLLStorageClass OptThreadLocal OptUnnamedAddr OptAddrSpace OptExternallyInitialized Immutable Type GlobalAttrs FuncAttrs
	<< &ast.Global{Name: $0.(ast.GlobalIdent), Linkage: $2.(ast.Linkage), Preemption: $3.(ast.PreemptionSpecifier), Visibility: $4.(ast.Visibility), DLLStorageClass: $5.(ast.DLLStorageClass), ThreadLocal: $6.(*ast.ThreadLocal), UnnamedAddr: $7.(ast.UnnamedAddr), AddrSpace: $8.(ast.AddrSpace), ExternallyInitialized: $9.(bool), Immutable: $10.(bool), Type: $11.(ast.Type), GlobalAttrs: $12.([]ast.GlobalAttribute), FuncAttrs: $13.(ast.FuncAttribute)}, nil >>
	| GlobalIdent "=" ExternLinkage OptPreemptionSpecifier OptVisibility OptDLLStorageClass OptThreadLocal OptUnnamedAddr Alias Type "," Type Constant
	<< &ast.IndirectSymbol{Name: $0.(ast.GlobalIdent), Linkage: $2.(ast.Linkage), Preemption: $3.(ast.PreemptionSpecifier), Visibility: $4.(ast.Visibility), DLLStorageClass: $5.(ast.DLLStorageClass), ThreadLocal: $6.(*ast.ThreadLocal), UnnamedAddr: $7.(ast.UnnamedAddr), Alias: $8.(bool), Type: $9.(ast.Type), Value: astx.TypeConst($10, $11)}, nil >>
;

Alias
	: "alias"   << true, nil >>
	| "ifunc"   << false, nil >>
;

// ~~~ [ Global Variable Definition ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GlobalDef
	: GlobalIdent "=" OptLinkage OptPreemptionSpecifier OptVisibility OptDLLStorageClass OptThreadLocal OptUnnamedAddr OptAddrSpace OptExternallyInitialized Immutable Type Constant GlobalAttrs FuncAttrs
	<< &ast.Global{Name: $0.(ast.GlobalIdent), Linkage: $2.(ast.Linkage), Preemption: $3.(ast.PreemptionSpecifier), Visibility: $4.(ast.Visibility), DLLStorageClass: $5.(ast.DLLStorageClass), ThreadLocal: $6.(*ast.ThreadLocal), UnnamedAddr: $7.(ast.UnnamedAddr), AddrSpace: $8.(ast.AddrSpace), ExternallyInitialized: $9.(bool), Immutable: $10.(bool), Type: $11.(ast.Type), Init: $12.(ast.Constant), GlobalAttrs: $13.([]ast.GlobalAttribute), FuncAttrs: $14.(ast.FuncAttribute)}, nil >>
	| GlobalIdent "=" OptLinkage OptPreemptionSpecifier OptVisibility OptDLLStorageClass OptThreadLocal OptUnnamedAddr Alias Type "," Type Constant
	<< &ast.IndirectSymbol{Name: $0.(ast.GlobalIdent), Linkage: $2.(ast.Linkage), Preemption: $3.(ast.PreemptionSpecifier), Visibility: $4.(ast.Visibility), DLLStorageClass: $5.(ast.DLLStorageClass), ThreadLocal: $6.(*ast.ThreadLocal), UnnamedAddr: $7.(ast.UnnamedAddr), Alias: $8.(bool), Type: $9.(ast.Type), Value: astx.TypeConst($10, $11)}, nil >>
;

// ref: ParseOptionalThreadLocal
//
//   := empty
//   := 'thread_local'
//   := 'thread_local' '(' tlsmodel ')'

OptThreadLocal
	: empty
	<< (*ast.ThreadLocal)(nil), nil >>
	| ThreadLocal
;

ThreadLocal
	: "thread_local"
	<< &ast.ThreadLocal{}, nil >>
	| "thread_local" "(" TLSModel ")"
	<< &ast.ThreadLocal{Model: $2.(ast.TLSModel)}, nil >>
;

// ref: ParseTLSModel
//
//   := 'localdynamic'
//   := 'initialexec'
//   := 'localexec'

TLSModel
	: "initialexec"    << ast.TLSModelInitialExec, nil >>
	| "localdynamic"   << ast.TLSModelLocalDynamic, nil >>
	| "localexec"      << ast.TLSModelLocalExec, nil >>
;

OptExternallyInitialized
	: empty                      << false, nil >>
	| "externally_initialized"   << true, nil >>
;

// ref: ParseGlobalType
//
//   ::= 'constant'
//   ::= 'global'

Immutable
	: "constant"   << true, nil >>
	| "global"     << false, nil >>
;

GlobalAttrs
	: empty
	<< ([]ast.GlobalAttribute)(nil), nil >>
	| "," GlobalAttrList
	<< $1, nil >>
;

GlobalAttrList
	: GlobalAttr
	<< []ast.GlobalAttribute{$0.(ast.GlobalAttribute)}, nil >>
	| GlobalAttrList "," GlobalAttr
	<< append($0.([]ast.GlobalAttribute), $2.(ast.GlobalAttribute)), nil >>
;

GlobalAttr
	: Section
	| Comdat
	| Alignment
	//   ::= !dbg !57
	| MetadataAttachment
;

