// ~~~ [ Global Variable Declaration ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#global-variables

// ref: ParseUnnamedGlobal
//
//   OptionalVisibility (ALIAS | IFUNC) ...
//   OptionalLinkage OptionalPreemptionSpecifier OptionalVisibility
//   OptionalDLLStorageClass
//                                                     ...   -> global variable
//   GlobalID '=' OptionalVisibility (ALIAS | IFUNC) ...
//   GlobalID '=' OptionalLinkage OptionalPreemptionSpecifier OptionalVisibility
//                OptionalDLLStorageClass
//                                                     ...   -> global variable

// ref: ParseNamedGlobal
//
//   GlobalVar '=' OptionalVisibility (ALIAS | IFUNC) ...
//   GlobalVar '=' OptionalLinkage OptionalPreemptionSpecifier
//                 OptionalVisibility OptionalDLLStorageClass
//                                                     ...   -> global variable

// ref: ParseGlobal
//
//   ::= GlobalVar '=' OptionalLinkage OptionalPreemptionSpecifier
//       OptionalVisibility OptionalDLLStorageClass
//       OptionalThreadLocal OptionalUnnamedAddr OptionalAddrSpace
//       OptionalExternallyInitialized GlobalType Type Const OptionalAttrs
//   ::= OptionalLinkage OptionalPreemptionSpecifier OptionalVisibility
//       OptionalDLLStorageClass OptionalThreadLocal OptionalUnnamedAddr
//       OptionalAddrSpace OptionalExternallyInitialized GlobalType Type
//       Const OptionalAttrs

GlobalDecl
	: GlobalIdent "=" ExternLinkage OptPreemptionSpecifier OptVisibility OptDLLStorageClass OptThreadLocal OptUnnamedAddr OptAddrSpace OptExternallyInitialized Immutable Type GlobalAttrs FuncAttrs
	<< &ir.Global{Name: astx.GlobalIdent($0), Linkage: $2.(ir.Linkage), Preemption: $3.(ir.Preemption), Visibility: $4.(ir.Visibility), DLLStorageClass: $5.(ir.DLLStorageClass), ThreadLocal: $6.(*ir.ThreadLocal), UnnamedAddr: $7.(ir.UnnamedAddr), AddrSpace: $8.(types.AddrSpace), ExternallyInitialized: $9.(bool), Immutable: $10.(bool), ContentType: $11.(types.Type), Section: astx.OptSectionFromGlobalAttrs($12.([]astx.GlobalAttribute)), Comdat: astx.OptComdatFromGlobalAttrs($12.([]astx.GlobalAttribute)), Align: astx.OptAlignFromGlobalAttrs($12.([]astx.GlobalAttribute)), Metadata: astx.MetadataFromGlobalAttrs($12.([]astx.GlobalAttribute)), FuncAttrs: $13.([]ir.FuncAttribute)}, nil >>
;

// ~~~ [ Global Variable Definition ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GlobalDef
	: GlobalIdent "=" OptLinkage OptPreemptionSpecifier OptVisibility OptDLLStorageClass OptThreadLocal OptUnnamedAddr OptAddrSpace OptExternallyInitialized Immutable Type Constant GlobalAttrs FuncAttrs
	<< &ir.Global{Name: astx.GlobalIdent($0), Linkage: $2.(ir.Linkage), Preemption: $3.(ir.Preemption), Visibility: $4.(ir.Visibility), DLLStorageClass: $5.(ir.DLLStorageClass), ThreadLocal: $6.(*ir.ThreadLocal), UnnamedAddr: $7.(ir.UnnamedAddr), AddrSpace: $8.(types.AddrSpace), ExternallyInitialized: $9.(bool), Immutable: $10.(bool), ContentType: $11.(types.Type), Init: astx.TypeConst($11, $12), Section: astx.OptSectionFromGlobalAttrs($13.([]astx.GlobalAttribute)), Comdat: astx.OptComdatFromGlobalAttrs($13.([]astx.GlobalAttribute)), Align: astx.OptAlignFromGlobalAttrs($13.([]astx.GlobalAttribute)), Metadata: astx.MetadataFromGlobalAttrs($13.([]astx.GlobalAttribute)), FuncAttrs: $14.([]ir.FuncAttribute)}, nil >>
;

OptExternallyInitialized
	: empty                      << false, nil >>
	| "externally_initialized"   << true, nil >>
;

// ref: ParseGlobalType
//
//   ::= 'constant'
//   ::= 'global'

Immutable
	: "constant"   << true, nil >>
	| "global"     << false, nil >>
;

GlobalAttrs
	: empty
	<< ([]astx.GlobalAttribute)(nil), nil >>
	| "," GlobalAttrList
	<< $1, nil >>
;

GlobalAttrList
	: GlobalAttr
	<< []astx.GlobalAttribute{$0.(astx.GlobalAttribute)}, nil >>
	| GlobalAttrList "," GlobalAttr
	<< append($0.([]astx.GlobalAttribute), $2.(astx.GlobalAttribute)), nil >>
;

GlobalAttr
	: Section
	| Comdat
	| Alignment
	//   ::= !dbg !57
	| MetadataAttachment
;

