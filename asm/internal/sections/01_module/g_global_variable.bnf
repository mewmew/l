// ~~~ [ Global Variable Declaration ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// https://llvm.org/docs/LangRef.html#global-variables

// ref: ParseUnnamedGlobal
//
//   OptionalVisibility (ALIAS | IFUNC) ...
//   OptionalLinkage OptionalPreemptionSpecifier OptionalVisibility
//   OptionalDLLStorageClass
//                                                     ...   -> global variable
//   GlobalID '=' OptionalVisibility (ALIAS | IFUNC) ...
//   GlobalID '=' OptionalLinkage OptionalPreemptionSpecifier OptionalVisibility
//                OptionalDLLStorageClass
//                                                     ...   -> global variable

// ref: ParseNamedGlobal
//
//   GlobalVar '=' OptionalVisibility (ALIAS | IFUNC) ...
//   GlobalVar '=' OptionalLinkage OptionalPreemptionSpecifier
//                 OptionalVisibility OptionalDLLStorageClass
//                                                     ...   -> global variable

// ref: ParseGlobal
//
//   ::= GlobalVar '=' OptionalLinkage OptionalPreemptionSpecifier
//       OptionalVisibility OptionalDLLStorageClass
//       OptionalThreadLocal OptionalUnnamedAddr OptionalAddrSpace
//       OptionalExternallyInitialized GlobalType Type Const OptionalAttrs
//   ::= OptionalLinkage OptionalPreemptionSpecifier OptionalVisibility
//       OptionalDLLStorageClass OptionalThreadLocal OptionalUnnamedAddr
//       OptionalAddrSpace OptionalExternallyInitialized GlobalType Type
//       Const OptionalAttrs

GlobalDecl
	: GlobalIdent "=" ExternLinkage OptPreemptionSpecifier OptVisibility OptDLLStorageClass OptThreadLocal OptUnnamedAddr OptAddrSpace OptExternallyInitialized Immutable Type GlobalAttrs FuncAttrs
	<< &ir.Global{Name: $0.(*ast.GlobalIdent).Name, Linkage: $2.(ll.Linkage), Preemption: $3.(ll.Preemption), Visibility: $4.(ll.Visibility), DLLStorageClass: $5.(ll.DLLStorageClass), ThreadLocal: $6.(*ll.ThreadLocal), UnnamedAddr: $7.(ll.UnnamedAddr), AddrSpace: $8.(types.AddrSpace), ExternallyInitialized: $9.(bool), Immutable: $10.(bool), ContentType: $11.(types.Type), GlobalAttrs: $12.([]ll.GlobalAttribute), FuncAttrs: $13.([]ll.FuncAttribute)}, nil >>
;

// ~~~ [ Global Variable Definition ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GlobalDef
	: GlobalIdent "=" OptLinkage OptPreemptionSpecifier OptVisibility OptDLLStorageClass OptThreadLocal OptUnnamedAddr OptAddrSpace OptExternallyInitialized Immutable Type Constant GlobalAttrs FuncAttrs
	<< &ir.Global{Name: $0.(*ast.GlobalIdent).Name, Linkage: $2.(ll.Linkage), Preemption: $3.(ll.Preemption), Visibility: $4.(ll.Visibility), DLLStorageClass: $5.(ll.DLLStorageClass), ThreadLocal: $6.(*ll.ThreadLocal), UnnamedAddr: $7.(ll.UnnamedAddr), AddrSpace: $8.(types.AddrSpace), ExternallyInitialized: $9.(bool), Immutable: $10.(bool), ContentType: $11.(types.Type), Init: astx.TypeConst($11, $12), GlobalAttrs: $13.([]ll.GlobalAttribute), FuncAttrs: $14.([]ll.FuncAttribute)}, nil >>
;

// ref: ParseOptionalThreadLocal
//
//   := empty
//   := 'thread_local'
//   := 'thread_local' '(' tlsmodel ')'

OptThreadLocal
	: empty
	<< (*ll.ThreadLocal)(nil), nil >>
	| ThreadLocal
;

ThreadLocal
	: "thread_local"
	<< &ll.ThreadLocal{}, nil >>
	| "thread_local" "(" TLSModel ")"
	<< &ll.ThreadLocal{Model: $2.(ll.TLSModel)}, nil >>
;

// ref: ParseTLSModel
//
//   := 'localdynamic'
//   := 'initialexec'
//   := 'localexec'

TLSModel
	: "initialexec"    << ll.TLSModelInitialExec, nil >>
	| "localdynamic"   << ll.TLSModelLocalDynamic, nil >>
	| "localexec"      << ll.TLSModelLocalExec, nil >>
;

OptExternallyInitialized
	: empty                      << false, nil >>
	| "externally_initialized"   << true, nil >>
;

// ref: ParseGlobalType
//
//   ::= 'constant'
//   ::= 'global'

Immutable
	: "constant"   << true, nil >>
	| "global"     << false, nil >>
;

GlobalAttrs
	: empty
	<< ([]ll.GlobalAttribute)(nil), nil >>
	| "," GlobalAttrList
	<< $1, nil >>
;

GlobalAttrList
	: GlobalAttr
	<< []ll.GlobalAttribute{$0.(ll.GlobalAttribute)}, nil >>
	| GlobalAttrList "," GlobalAttr
	<< append($0.([]ll.GlobalAttribute), $2.(ll.GlobalAttribute)), nil >>
;

GlobalAttr
	: Section
	| Comdat
	| Alignment
	//   ::= !dbg !57
	| MetadataAttachment
;

